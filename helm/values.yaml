# For detailed explanation of each of the configuration settings see
# https://www.pomerium.io/docs/config-reference.htmls

# settings that are shared by all services
config:
  rootDomain: corp.pomerium.io
  # existingSecret:
  # existingConfig:
  # secrets can be generated with `head -c32 /dev/urandom | base64`
  sharedSecret: "LL3g/NoKkao7mTec2/wYSOZAki1VbR89q+kqbdFj0c4="
  cookieSecret: "tAhd5A5Y8R/H/msFhkNdt8dCym2SatVbh4UrcDk3+Ms="
  # generate TLS by building a dummy ca
  generateTLS: true
  policyFile: |-
    - from: httpbin.corp.pomerium.io
      to: http://httpbin
      allowed_domains:
      - pomerium.io
    - from: external-httpbin.corp.pomerium.io
      to: httpbin.org
      allowed_domains:
      - gmail.com
    - from: weirdlyssl.corp.pomerium.io
      to: http://neverssl.com
      allowed_users:
      - bdd@pomerium.io
      allowed_groups:
      - admins
      - developers
    - from: hello.corp.pomerium.io
      to: http://hello:8080
      allowed_groups:
      - admins

authenticate:
  name: authenticate
  tls:
    cert: ""
    key: ""
    defaultSANList:
      []
      # - example.com
      # - corp.example.com
    defaultIPList:
      []
      # - 1.2.3.4

  redirectUrl: https://auth.corp.pomerium.io/oauth2/callback
  # see https://www.pomerium.io/docs/identity-providers.html
  idp:
    provider: google
    # url: https://example.oktapreview.com/oauth2/default
    clientID: "REPLACE_ME"
    clientSecret: "REPLACE_ME"

authorize:
  name: authorize
  tls:
    cert: ""
    key: ""
    defaultSANList:
      # - access.corp.example.com
    defaultIPList:
      []
      # - 1.2.3.4

proxy:
  name: proxy
  tls:
    cert: ""
    key: ""
    defaultSANList:
      []
      # - example.com
      # - corp.example.com
    defaultIPList:
      []
      # - 1.2.3.4
  authenticateServiceUrl: https://auth.corp.pomerium.io
  authorizeServiceUrl: https://access.corp.pomerium.io
  # authorizeUseInternalUrl:
  # authenticateUseInternalUrl:

# For any other settings that are optional. for a complete listing see:
# https://www.pomerium.io/docs/config-reference.html
extraEnv: {}
extraArgs: {}
extraVolumes: {}

image:
  repository: "pomerium/pomerium"
  tag: "latest"
  pullPolicy: "IfNotPresent"

service:
  # Service type can be set to ClusterIP, NodePort or LoadBalancer.
  type: NodePort
  externalPort: 443
  annotations:
    {}
    # cloud.google.com/app-protocols: '{"https":"HTTPS"}'
  labels: {}

ingress:
  enabled: true
  annotations:
    {}
    # kubernetes.io/ingress.class: nginx
    # kubernetes.io/tls-acme: "true"
  # path: /
  tls: []
  #  - secretName: corp.pomerium.com-tls

resources:
  {}
  # limits:
  #   cpu: 100m
  #   memory: 300Mi
  # requests:
  #   cpu: 100m
  #   memory: 300Mi

priorityClassName: ""

# Affinity for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/#affinity-and-anti-affinity
# affinity: {}

# Tolerations for pod assignment
# Ref: https://kubernetes.io/docs/concepts/configuration/taint-and-toleration/
# tolerations: []

# Node labels for pod assignment
# Ref: https://kubernetes.io/docs/user-guide/node-selection/
# nodeSelector: {}

podAnnotations: {}
podLabels: {}
replicaCount: 1
