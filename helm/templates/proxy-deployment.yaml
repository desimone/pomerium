apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app: {{ template "pomerium.name" . }}-{{ .Values.proxy.name }}
    chart: {{ template "pomerium.chart" . }}
    heritage: {{ .Release.Service }}
    release: {{ .Release.Name }}
  name: {{ template "pomerium.fullname" . }}-{{ .Values.proxy.name }}
{{- if .Values.annotations }}
  annotations:
{{ toYaml .Values.annotations | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ template "pomerium.name" . }}-{{ .Values.proxy.name }}
      release: {{ .Release.Name }}
  template:
    metadata:
{{- if .Values.podAnnotations }}
      annotations:
{{ toYaml .Values.podAnnotations | indent 8 }}
{{- end }}
      labels:
        app: {{ template "pomerium.name" . }}-{{ .Values.proxy.name }}
        chart: {{ template "pomerium.chart" . }}
        heritage: {{ .Release.Service }}
        release: {{ .Release.Name }}
{{- if .Values.podLabels }}
{{ toYaml .Values.podLabels | indent 8 }}
{{- end }}
    spec:
{{- if .Values.priorityClassName }}
      priorityClassName: {{ .Values.priorityClassName }}
{{- end }}
      containers:
      - name: {{ .Chart.Name }}
        image: {{ .Values.image.repository }}:{{ .Values.image.tag }}
        imagePullPolicy: {{ .Values.image.pullPolicy }}
        args:
{{- range $key, $value := .Values.extraArgs }}
{{- if $value }}
          - --{{ $key }}={{ $value }}
{{- else }}
          - --{{ $key }}
{{- end }}
{{- end }}
        env:
        - name: SERVICES
          value: proxy
        - name: COOKIE_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ if not .Values.config.existingSecret }}{{ template "pomerium.fullname" . }}{{ else }}{{ .Values.config.existingSecret }}{{ end }}
              key: cookie-secret
        - name: SHARED_SECRET
          valueFrom:
            secretKeyRef:
              name: {{ if not .Values.config.existingSecret }}{{ template "pomerium.fullname" . }}{{ else }}{{ .Values.config.existingSecret }}{{ end }}
              key: shared-secret
        - name: AUTHENTICATE_SERVICE_URL
          value: {{ .Values.proxy.authenticateServiceUrl }}
        - name: AUTHORIZE_SERVICE_URL
          value: {{ .Values.proxy.authorizeServiceUrl }}
{{- if .Values.proxy.authenticateUseInternalUrl }}
        - name: AUTHENTICATE_INTERNAL_URL
          value: {{ template "pomerium.fullname" . }}-{{ .Values.authenticate.name }}
{{- end }}
{{- if .Values.proxy.authorizeUseInternalUrl }}
        - name: AUTHORIZE_INTERNAL_URL
          value: {{ template "pomerium.fullname" . }}-{{ .Values.authorize.name }}
{{- end }}
{{- if .Values.config.policyFile}}
        - name: POLICY_FILE
          value: /etc/pomerium/policy.yaml
{{- end }}
{{- if .Values.config.policy}}
        - name: POLICY
          value: {{ .Values.config.policy }}
{{- end }}
        - name: CERTIFICATE
          valueFrom:
            secretKeyRef:
              name: {{ if not .Values.config.existingSecret }}{{ template "pomerium.fullname" . }}{{ else }}{{ .Values.config.existingSecret }}{{ end }}
              key: proxy-cert
        - name: CERTIFICATE_KEY
          valueFrom:
            secretKeyRef:
              name: {{ if not .Values.config.existingSecret }}{{ template "pomerium.fullname" . }}{{ else }}{{ .Values.config.existingSecret }}{{ end }}
              key: proxy-key
{{- if .Values.config.ca }}
        - name: CERTIFICATE_AUTHORITY
          valueFrom:
            secretKeyRef:
              name: {{ if not .Values.config.existingSecret }}{{ template "pomerium.fullname" . }}{{ else }}{{ .Values.config.existingSecret }}{{ end }}
              key:  ca-cert
{{- end }}
{{- range $name, $value := .Values.extraEnv }}
        - name: {{ $name }}
          value: {{ quote $value }}
{{- end }}
        ports:
          - containerPort: 443
            name: https
            protocol: TCP
        livenessProbe:
          httpGet:
            path: /ping
            port: https
            scheme: HTTPS
        readinessProbe:
          httpGet:
            path: /ping
            port: https
            scheme: HTTPS
{{- if .Values.config.policyFile}}
        volumeMounts:
        - mountPath: /etc/pomerium/
          name: policy
      volumes:
      - name: policy
        configMap:
          name: {{ if not .Values.config.existingConfig }}{{ include "pomerium.fullname" . }}{{ else }}{{ .Values.config.existingConfig }}{{ end }}
{{- end }}
      resources:
{{ toYaml .Values.resources | indent 10 }}
{{- if .Values.extraVolumes }}
      volumes:
{{- toYaml .Values.extraVolumes | indent 8 }}
{{- end }}
{{- if .Values.imagePullSecrets }}
      imagePullSecrets:
{{ toYaml .Values.imagePullSecrets | indent 8 }}
{{- end }}
{{- if .Values.nodeSelector }}
      nodeSelector:
{{ toYaml .Values.nodeSelector | indent 8 }}
{{- end }}
{{- if .Values.tolerations }}
      tolerations:
{{ toYaml .Values.tolerations | indent 8 }}
{{- end }}
{{- if .Values.affinity }}
      affinity:
{{ toYaml .Values.affinity | indent 8 }}
{{- end }}